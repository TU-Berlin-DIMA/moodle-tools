[build-system]
requires = ["setuptools >= 61"]
build-backend = "setuptools.build_meta"

[project]
name = "moodle_tools"
dynamic = ["version", "readme"]
description = "A collection of tools to simplify working with Moodle quizzes."
requires-python = ">=3.11,<3.14"
license = { file = "LICENSE" }
authors = [
    { name = "Viktor Rosenfeld", email = "viktor.rosenfeld@tu-berlin.de" },
]
maintainers = [{ name = "ISDA Team", email = "isda@dima.tu-berlin.de" }]
keywords = ["data streams", "query relaxation"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent,",
]
dependencies = [
    "asteval ~= 1.0",
    "duckdb==1.1.3",
    "isda-streaming @ git+https://git.tu-berlin.de/dima/isda/isda-streaming",
    "Jinja2 ~= 3.1",
    "loguru > 0.7",
    "markdown ~= 3.4",
    "pyyaml ~= 6.0",
    "sqlparse ~= 0.5.0",
]

[project.optional-dependencies]
docs = [
    "pdoc ~= 15.0",
]
test = [
    "pytest ~= 8.3",
    "pytest-cov ~= 6.0",
]
dev = [
    "moodle-tools[docs,test]",
    "mypy ~= 1.13",
    "pre-commit ~= 4.0",
    "types-markdown ~= 3.4",
    "types-pyyaml ~= 6.0",
]

[project.scripts]
analyze-results = "moodle_tools.analyze_results:main"
make-questions = "moodle_tools.make_questions:main"

[project.urls]
Homepage = "https://git.tu-berlin.de/dima/moodle-tools"
Repository = "https://git.tu-berlin.de/dima/moodle-tools"
"Bug Tracker" = "https://git.tu-berlin.de/dima/moodle-tools/-/issues"

[tool.setuptools.dynamic]
version = { attr = "moodle_tools.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.setuptools.package-data]
moodle_tools = ["py.typed","*/templates/*.j2"]

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90",  # mccabe
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    "Q",  # flake8-quotes
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "RET",  # flake8-return
    "RUF",  # ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "UP",  # pyupgrade
    "W",  # pycodestyle warnings
]
ignore = [
    "D1",  # doctring rules
    "D415",  # ends-in-punctuation
    "ISC001",  # single-line-implicit-string-concatenation
    "PLR0913",  # too-many-arguments
    "PLR2004",  # magic-value-comparison
    "PT004",  # pytest-missing-fixture-name-underscore (deprecated)
    "PT005",  # pytest-incorrect-fixture-name-underscore (deprecated)
    "S101",  # assert
    "UP015",  # redundant-open-modes
]
pydocstyle.convention = "google"
pylint.max-positional-args = 7

[tool.mypy]
strict = true

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
